schema {
  query: Query
  mutation: Mutation
}

enum EstadoAsistencia {
  AUSENTE
  JUSTIFICADO
  PRESENTE
  RETARDO
}

enum Nivel {
  Primaria
  Secundaria
}

enum PeriodoEvaluacion {
  FINAL
  PARCIAL1
  PARCIAL2
}

enum Turno {
  Matutino 
  Vespertino
  Nocturno
  Discontinuo
}

type NombreCompleto {
  primer_nombre: String!
  segundo_nombre: String
  apellido_paterno: String!
  apellido_materno: String
  nombre_completo: String
}

type Alumno {
  id: ID!
  curp: String
  escuelaID: ID!
  fecha_nacimiento: AWSDate
  gradoID: ID!  
  matricula: String
  nombre: NombreCompleto!
  tutorIDs: [ID!]
}

type AsistenciaClase {
  materiaID: ID!
  estado: EstadoAsistencia!
}

type Asistencia {
  id: ID
  alumnoID: ID!
  escuelaID: ID!
  gradoID: ID!
  fecha: AWSDate!
  estado: EstadoAsistencia!
  createdAt: AWSDateTime
}

type Calificacion {
  alumnoID: ID!
  calificacion: Float!
  claseID: ID!
  createdAt: AWSDateTime
  id: ID!
  observaciones: String
  periodo: PeriodoEvaluacion!
}

type Grado{
  id: ID!
  escuelaID: ID! #indice 1
  nivel: Nivel
  turno: Turno!  #Matutino, Vespertino
  grado: String!
  grupo: String!  
  materiaIDs: [ID!]!
}

type Materia {
  id: ID!
  campo_formativo: String
  materia: String!
}

type Clase {
  gradoID: ID!
  materiaID: ID!
  escuelaID: ID!  
  hora_inicio: String
  hora_fin: String  
  maestroID: ID!
  estado: EstadoAsistencia! 
}

type NivelEscolar {
  nivel: Nivel!
  turno: Turno!
}

type Escuela {
  cct: ID
  nivel_escolar: [NivelEscolar]!
  entidad: String
  municipio: String
  localidad: String
  direccion: String
  nombre: String!
  sostenimiento: String #publico, privado
}

type Domicilio{
  calle: String
  numeroExterior: String
  numeroInterior: String
  colonia:  String
  municipio: String
  cp: String
}

type Maestro {
  id: ID
  escuelaID: ID!
  curp: String!
  rfc: String
  nivel_academico: String
  cedula: String
  correo: String!
  telefono: String!
  materias: [String]
  nombre: NombreCompleto!
  domicilio: String
}

type Tutor {
  id: ID!
  escuelaID: ID
  correo: String!  
  nombre: String!
  telefono: String!
  parentesco: String!
  domicilio: String
}

#  -------- Mutation --------
type Mutation {
  createAlumno(input: AlumnoInput!): Alumno!
  createAsistencia(input: AsistenciaInput!): Asistencia!
  createCalificacion(input: CalificacionInput!): Calificacion!
  createClase(input: ClaseInput!): Clase!
  createEscuela(input: EscuelaInput!): Escuela!
  createMaestro(input: MaestroInput!): Maestro!
  createTutor(input: TutorInput!): Tutor!
  deleteAlumno(id: ID!): Boolean!
  deleteAsistencia(id: ID!): Boolean!
  deleteCalificacion(id: ID!): Boolean!
  deleteClase(id: ID!): Boolean!
  deleteEscuela(cct: ID!): Boolean!
  deleteMaestro(id: ID!): Boolean!
  deleteTutor(id: ID!): Boolean!
  updateAlumno(id: ID!, input: UpdateAlumnoInput!): Alumno!
  updateAsistencia(id: ID!, input: AsistenciaInput!): Asistencia!
  updateCalificacion(id: ID!, input: CalificacionInput!): Calificacion!
  updateClase(id: ID!, input: ClaseInput!): Clase!
  updateEscuela(cct: ID!, input: UpdateEscuelaInput!): Escuela!
  updateMaestro(id: ID!, input: UpdateMaestroInput!): Maestro!
  updateTutor(id: ID!, input: UpdateTutorInput!): Tutor!
}

#  -------- Query --------
type Query {
  getAlumno(id: ID!): Alumno
  getAsistencia(id: ID!): Asistencia
  getCalificacion(id: ID!): Calificacion
  getClase(id: ID!): Clase
  getEscuela(cct: ID!): Escuela
  getMaestro(id: ID!): Maestro
  getTutor(id: ID!): Tutor
  listAlumnos(escuelaID: ID!, gradoID: String): [Alumno!]!
  listAsistenciasPorAlumno(alumnoID: ID!, fechaDesde: AWSDate, fechaHasta: AWSDate): [Asistencia!]!
  listAsistenciasPorClase(claseID: ID!, fechaDesde: AWSDate, fechaHasta: AWSDate): [Asistencia!]!
  listCalificacionesPorAlumno(alumnoID: ID!, periodo: PeriodoEvaluacion): [Calificacion!]!
  listCalificacionesPorClase(claseID: ID!, periodo: PeriodoEvaluacion): [Calificacion!]!
  listClases(escuelaID: ID!, grado: String, grupo: String, maestroID: ID): [Clase!]!
  listEscuelas: [Escuela!]!
  listMaestros(escuelaID: ID!): [Maestro!]!
  listTutores(escuelaID: ID!): [Tutor!]!
  listGrados(escuelaID: ID!): [Grado]
  listMaterias: [Materia]
}

#  -------- Inputs --------
input NombreCompletoInput {
  primer_nombre: String
  segundo_nombre: String
  apellido_paterno: String
  apellido_materno: String
  nombre_completo: String
}

input AlumnoInput {
  id: ID!
  curp: String
  escuelaID: ID!
  fecha_nacimiento: AWSDate
  gradoID: ID!  
  matricula: String
  nombre: NombreCompletoInput!
  tutorIDs: [ID!]
}

input UpdateAlumnoInput {
  curp: String
  escuelaID: ID!
  fecha_nacimiento: AWSDate
  gradoID: ID!  
  matricula: String
  nombre: NombreCompletoInput!
  tutorIDs: [ID!]
}

input AsistenciaInput {
  alumnoID: ID!
  claseID: ID!
  estado: EstadoAsistencia!
  fecha: AWSDate!
  id: ID
}

input CalificacionInput {
  alumnoID: ID!
  calificacion: Float!
  claseID: ID!
  id: ID
  observaciones: String
  periodo: PeriodoEvaluacion!
}

input ClaseInput {
  escuelaID: ID!
  grado: String!
  grupo: String!
  horario: String
  id: ID
  maestroID: ID!
  materia: String!
}

input NivelEscolarInput{
  nivel: Nivel
  turno: Turno
}

input UpdateEscuelaInput{
  nivel_escolar: [NivelEscolarInput]!
  entidad: String
  municipio: String
  localidad: String
  direccion: String  
  nombre: String!
  sostenimiento: String
}

input EscuelaInput {
  cct: ID!
  nivel_escolar: [NivelEscolarInput]!
  entidad: String
  municipio: String
  localidad: String
  direccion: String  
  nombre: String!
  sostenimiento: String
}

input UpdateMaestroInput {  
  escuelaID: ID!
  curp: String!
  rfc: String
  nivel_academico: String
  cedula: String
  correo: String!
  telefono: String!
  materias: [String]
  nombre: NombreCompletoInput!
  domicilio: String
}

input MaestroInput {
  id: ID!
  escuelaID: ID! #
  curp: String! #
  rfc: String
  nivel_academico: String
  cedula: String
  correo: String!  #
  telefono: String! #
  materias: [String] #
  nombre: NombreCompletoInput! #
  domicilio: String
}

input UpdateTutorInput {  
  correo: String
  nombre: String
  telefono: String
  parentesco: String
  domicilio: String
}

input TutorInput {
  id: ID!
  escuelaID: ID!
  correo: String!  
  nombre: String!
  telefono: String!
  parentesco: String!
  domicilio: String
}
